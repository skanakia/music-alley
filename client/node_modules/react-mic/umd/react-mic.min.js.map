{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c28e76ff98b0a9d805a8","webpack:///./src/libs/AudioContext.js","webpack:///./src/components/ReactMic.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./src/libs/MicrophoneRecorder.js","webpack:///./src/libs/AudioPlayer.js","webpack:///./src/libs/Visualizer.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_4__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","audioCtx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","getAudioContext","getAnalyser","decodeAudioData","audioData","then","decodedData","__webpack_exports__","ReactMic","props","_classCallCheck","_this","_possibleConstructorReturn","_Component","visualize","_this$props","backgroundColor","strokeColor","width","height","visualSetting","_this$state","state","canvas","canvasCtx","__WEBPACK_IMPORTED_MODULE_4__libs_Visualizer__","visualizeSineWave","visualizeFrequencyBars","microphoneRecorder","componentDidMount","_this2","_props","onStop","onStart","audioElem","audioBitsPerSecond","mimeType","refs","visualizer","getContext","options","__WEBPACK_IMPORTED_MODULE_2__libs_AudioContext__","__WEBPACK_IMPORTED_MODULE_3__libs_AudioPlayer__","create","setState","__WEBPACK_IMPORTED_MODULE_1__libs_MicrophoneRecorder__","clear","_state","clearRect","render","_props2","record","_state2","startRecording","stopRecording","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","ref","className","__WEBPACK_IMPORTED_MODULE_0_react__","defaultProps","mediaRecorder","chunks","startTime","stream","mediaOptions","onStartCallback","onStopCallback","constraints","audio","video","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","MicrophoneRecorder","Date","now","resume","start","createMediaStreamSource","connect","mediaDevices","console","log","str","MediaRecorder","isTypeSupported","onstop","ondataavailable","event","push","data","__WEBPACK_IMPORTED_MODULE_0__AudioContext__","alert","stop","suspend","evt","blob","Blob","type","blobObject","stopTime","blobURL","URL","createObjectURL","audioSource","AudioPlayer","undefined","source","createMediaElementSource","destination","Visualizer","fftSize","bufferLength","dataArray","Uint8Array","draw","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","y","moveTo","lineTo","stroke","frequencyBinCount","getByteFrequencyData","barWidth","barHeight","hexToRgb","hex","result","exec","r","parseInt","g","b"],"mappings":"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","file":"react-mic.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-mic\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-mic\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c28e76ff98b0a9d805a8","const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\nconst analyser = audioCtx.createAnalyser();\n\nconst AudioContext  = {\n\n  getAudioContext() {\n    return audioCtx;\n  },\n\n  getAnalyser() {\n    return analyser;\n  },\n\n  decodeAudioData() {\n    audioCtx.decodeAudioData(audioData).then(function(decodedData) {\n      // use the decoded data here\n    });\n  }\n\n}\n\nexport default AudioContext;\n\n\n// WEBPACK FOOTER //\n// ./src/libs/AudioContext.js","// cool blog article on how to do this: http://www.smartjava.org/content/exploring-html5-web-audio-visualizing-sound\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\n\n// distortion curve for the waveshaper, thanks to Kevin Ennis\n// http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion\n\nimport React, { Component }   from 'react'\nimport { string, number, bool, func } from 'prop-types';\nimport { MicrophoneRecorder } from '../libs/MicrophoneRecorder';\nimport AudioContext           from '../libs/AudioContext';\nimport AudioPlayer            from '../libs/AudioPlayer';\nimport Visualizer             from '../libs/Visualizer';\n\n\nexport default class ReactMic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      analyser            : null,\n      microphoneRecorder  : null,\n      canvas              : null,\n      canvasCtx           : null\n    }\n  }\n\n  componentDidMount() {\n    const { onStop, onStart, audioElem, audioBitsPerSecond, mimeType } = this.props;\n    const { visualizer } = this.refs;\n    const canvas = visualizer;\n    const canvasCtx = canvas.getContext(\"2d\");\n    const options = {\n      audioBitsPerSecond : audioBitsPerSecond,\n      mimeType           : mimeType\n    }\n\n    if(audioElem) {\n      const analyser = AudioContext.getAnalyser();\n\n      AudioPlayer.create(audioElem);\n\n      this.setState({\n        analyser            : analyser,\n        canvas              : canvas,\n        canvasCtx           : canvasCtx\n      }, () => {\n        this.visualize();\n      });\n    } else {\n      const analyser = AudioContext.getAnalyser();\n\n      this.setState({\n        analyser            : analyser,\n        microphoneRecorder  : new MicrophoneRecorder(onStart, onStop, options),\n        canvas              : canvas,\n        canvasCtx           : canvasCtx\n      }, () => {\n        this.visualize();\n      });\n    }\n\n  }\n\n  visualize= () => {\n    const self = this;\n    const { backgroundColor, strokeColor, width, height, visualSetting } = this.props;\n    const { canvas, canvasCtx, analyser } = this.state;\n\n    if(visualSetting === 'sinewave') {\n      Visualizer.visualizeSineWave(analyser, canvasCtx, canvas, width, height, backgroundColor, strokeColor);\n\n    } else if(visualSetting === 'frequencyBars') {\n      Visualizer.visualizeFrequencyBars(analyser, canvasCtx, canvas, width, height, backgroundColor, strokeColor);\n\n    }\n\n  }\n\n  clear() {\n    const { canvasCtx, width, height } = this.state;\n    canvasCtx.clearRect(0, 0, width, height);\n  }\n\n  render() {\n    const { record, onStop, width, height } = this.props;\n    const { analyser,  microphoneRecorder, canvasCtx } = this.state;\n\n    if(record) {\n      if(microphoneRecorder) {\n        microphoneRecorder.startRecording();\n      }\n    } else {\n      if (microphoneRecorder) {\n        microphoneRecorder.stopRecording(onStop);\n        this.clear();\n      }\n    }\n\n    return (<canvas ref=\"visualizer\" height={height} width={width} className={this.props.className}></canvas>);\n  }\n}\n\nReactMic.propTypes = {\n  backgroundColor : string,\n  strokeColor     : string,\n  className       : string,\n  audioBitsPerSecond: number,\n  mimeType        : string,\n  height          : number,\n  record          : bool.isRequired,\n  onStop          : func\n};\n\nReactMic.defaultProps = {\n  backgroundColor   : 'rgba(255, 255, 255, 0.5)',\n  strokeColor       : '#000000',\n  className         : 'visualizer',\n  audioBitsPerSecond: 128000,\n  mimeType          : 'audio/webm;codecs=opus',\n  record            : false,\n  width             : 640,\n  height            : 100,\n  visualSetting     : 'sinewave'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ReactMic.js","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 4\n// module chunks = 0","import AudioContext from './AudioContext';\n\nlet analyser;\nlet audioCtx;\nlet mediaRecorder;\nlet chunks = [];\nlet startTime;\nlet stream;\nlet mediaOptions;\nlet blobObject;\nlet onStartCallback;\nlet onStopCallback;\n\nconst constraints = { audio: true, video: false }; // constraints - only audio needed\n\nnavigator.getUserMedia = (navigator.getUserMedia ||\n                          navigator.webkitGetUserMedia ||\n                          navigator.mozGetUserMedia ||\n                          navigator.msGetUserMedia);\n\nexport class MicrophoneRecorder {\n  constructor(onStart, onStop, options) {\n    onStartCallback= onStart;\n    onStopCallback= onStop;\n    mediaOptions= options;\n  }\n\n  startRecording=() => {\n\n    startTime = Date.now();\n\n    if(mediaRecorder) {\n\n      if(audioCtx && audioCtx.state === 'suspended') {\n        audioCtx.resume();\n      }\n\n      if(mediaRecorder && mediaRecorder.state === 'paused') {\n        mediaRecorder.resume();\n        return;\n      }\n\n      if(audioCtx && mediaRecorder && mediaRecorder.state === 'inactive') {\n        mediaRecorder.start(10);\n        const source = audioCtx.createMediaStreamSource(stream);\n        source.connect(analyser);\n        if(onStartCallback) { onStartCallback() };\n      }\n    } else {\n      if (navigator.mediaDevices) {\n        console.log('getUserMedia supported.');\n\n        navigator.mediaDevices.getUserMedia(constraints).then((str) => {\n          stream = str;\n\n          if(MediaRecorder.isTypeSupported(mediaOptions.mimeType)) {\n            mediaRecorder = new MediaRecorder(str, mediaOptions);\n          } else {\n            mediaRecorder = new MediaRecorder(str);\n          }\n\n          if(onStartCallback) { onStartCallback() };\n\n          mediaRecorder.onstop = this.onStop;\n          mediaRecorder.ondataavailable = (event) => {\n            chunks.push(event.data);\n          }\n\n          audioCtx = AudioContext.getAudioContext();\n          analyser = AudioContext.getAnalyser();\n\n          audioCtx.resume();\n          mediaRecorder.start(10);\n\n          const source = audioCtx.createMediaStreamSource(stream);\n          source.connect(analyser);\n\n        });\n      } else {\n        alert('Your browser does not support audio recording');\n      }\n    }\n\n  }\n\n  stopRecording() {\n    if(mediaRecorder && mediaRecorder.state !== 'inactive') {\n      mediaRecorder.stop();\n      audioCtx.suspend();\n    }\n  }\n\n  onStop(evt) {\n    const blob = new Blob(chunks, { 'type' : mediaOptions.mimeType });\n    chunks = [];\n\n    const blobObject =  {\n      blob      : blob,\n      startTime : startTime,\n      stopTime  : Date.now(),\n      options   : mediaOptions,\n      blobURL   : window.URL.createObjectURL(blob)\n    }\n\n    if(onStopCallback) { onStopCallback(blobObject) };\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/MicrophoneRecorder.js","import AudioContext from './AudioContext';\n\nlet audioSource;\n\nconst AudioPlayer =  {\n\n  create(audioElem) {\n    const audioCtx = AudioContext.getAudioContext();\n    const analyser = AudioContext.getAnalyser();\n\n    if(audioSource === undefined){\n      const source = audioCtx.createMediaElementSource(audioElem);\n      source.connect(analyser);\n      audioSource = source;\n    }\n\n    analyser.connect(audioCtx.destination);\n  }\n\n}\n\nexport default AudioPlayer;\n\n\n// WEBPACK FOOTER //\n// ./src/libs/AudioPlayer.js","let drawVisual;\n\nconst Visualizer = {\n\n  visualizeSineWave(analyser, canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    analyser.fftSize = 2048;\n\n    const bufferLength = analyser.fftSize;\n    const dataArray = new Uint8Array(bufferLength);\n\n    canvasCtx.clearRect(0, 0, width, height);\n\n    function draw() {\n\n      drawVisual = requestAnimationFrame(draw);\n\n      analyser.getByteTimeDomainData(dataArray);\n\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fillRect(0, 0, width, height);\n\n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = strokeColor;\n\n      canvasCtx.beginPath();\n\n      const sliceWidth = width * 1.0 / bufferLength;\n      let x = 0;\n\n      for(let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * height/2;\n\n        if(i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height/2);\n      canvasCtx.stroke();\n    };\n\n    draw();\n  },\n\n  visualizeFrequencyBars(analyser, canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    const self = this;\n    analyser.fftSize = 256;\n    const bufferLength = analyser.frequencyBinCount;\n    console.log(bufferLength);\n    const dataArray = new Uint8Array(bufferLength);\n\n    canvasCtx.clearRect(0, 0, width, height);\n\n    function draw() {\n      drawVisual = requestAnimationFrame(draw);\n\n      analyser.getByteFrequencyData(dataArray);\n\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fillRect(0, 0, width, height);\n\n      const barWidth = (width / bufferLength) * 2.5;\n      let barHeight;\n      let x = 0;\n\n      for(let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n\n        const rgb = self.hexToRgb(strokeColor);\n\n        // canvasCtx.fillStyle = `rgb(${barHeight+100},${rgb.g},${rgb.b})`;\n        canvasCtx.fillStyle = strokeColor;\n        canvasCtx.fillRect(x,height-barHeight/2,barWidth,barHeight/2);\n\n        x += barWidth + 1;\n      }\n    };\n\n    draw();\n  },\n\n  hexToRgb(hex) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n  }\n\n}\n\nexport default Visualizer;\n\n\n// WEBPACK FOOTER //\n// ./src/libs/Visualizer.js"],"sourceRoot":""}